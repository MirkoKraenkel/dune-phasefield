# Makefile.in generated by automake 1.11.1 from Makefile.am.
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009  Free Software Foundation,
# Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

# -*- Makefile -*-
# $Id: global-rules 5784 2009-12-14 19:51:06Z christi $

#
# this file should be included into any Makefile.am so that we can
# easily introduce new global rules. DO NOT OVERUSE!
#

# -*- Makefile -*-
# $Id: sourcescheck 6115 2010-09-01 19:17:42Z christi $

# -*- Makefile -*-
# $Id: sourcescheck 5183 2008-04-27 17:37:08Z christi $

# -*- Makefile -*-
# $Id: checklog 6488 2011-08-12 17:28:43Z sander $

#
# check-log
#
# This file implements the build-rules needed by the automated tests.
# "make check-log" will build the whole package and run all tests. For
# each test a log file under $(topsrc_dir)/check-log is created which
# contains the name of the test and what kind of test it was (build,
# lib, run, ...). If a test fails this is logged, but all other tests
# are still run.
#
# make OPTIONS:
# LOG_TIMING - specific command to measure the time needed for each test
#              example: "make LOG_TIMING='time -p' check-log"
#
# IMPLEMENTATION: check-log depends on different targets for different
# kinds of tests. These can run idividually by calling check-log-XXX.
# Possible variants are (in order of dependence)
#   - libs    (build all libraries)
#   - build   (build all applications and tests)
#   - test    (run each test from $(TESTS))
#   - sources (run sourcescheck in each directory)
#   - headers (run headercheck for each header)
#   - dir     (create dir entries for database, no actual tests are run)
#

# -*- Makefile -*-
# $Id: global-rules 5267 2008-09-10 10:45:42Z christi $

VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
check_PROGRAMS = phasefield$(EXEEXT) phasefield_nc$(EXEEXT) \
	phasefield_wb$(EXEEXT) newphasefield_wb$(EXEEXT)
DIST_COMMON = $(phase_HEADERS) $(srcdir)/Makefile.am \
	$(srcdir)/Makefile.in $(top_srcdir)/am/checklog \
	$(top_srcdir)/am/documentation $(top_srcdir)/am/global-rules \
	$(top_srcdir)/am/headercheck $(top_srcdir)/am/sourcescheck
subdir = src/problems/1dphase
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/dependencies.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__objects_1 = newphasefield_wb-phasefield.$(OBJEXT) \
	newphasefield_wb-phasefield_pol.$(OBJEXT)
am_newphasefield_wb_OBJECTS = $(am__objects_1)
newphasefield_wb_OBJECTS = $(am_newphasefield_wb_OBJECTS)
newphasefield_wb_LDADD = $(LDADD)
am__DEPENDENCIES_1 =
newphasefield_wb_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
am__objects_2 = phasefield-phasefield.$(OBJEXT) \
	phasefield-phasefield_pol.$(OBJEXT)
am_phasefield_OBJECTS = $(am__objects_2)
phasefield_OBJECTS = $(am_phasefield_OBJECTS)
phasefield_LDADD = $(LDADD)
phasefield_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am__objects_3 = phasefield_nc-phasefield.$(OBJEXT) \
	phasefield_nc-phasefield_pol.$(OBJEXT)
am_phasefield_nc_OBJECTS = $(am__objects_3)
phasefield_nc_OBJECTS = $(am_phasefield_nc_OBJECTS)
phasefield_nc_LDADD = $(LDADD)
phasefield_nc_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am__objects_4 = phasefield_wb-phasefield.$(OBJEXT) \
	phasefield_wb-phasefield_pol.$(OBJEXT)
am_phasefield_wb_OBJECTS = $(am__objects_4)
phasefield_wb_OBJECTS = $(am_phasefield_wb_OBJECTS)
phasefield_wb_LDADD = $(LDADD)
phasefield_wb_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_$(V))
am__v_CXX_ = $(am__v_CXX_$(AM_DEFAULT_VERBOSITY))
am__v_CXX_0 = @echo "  CXX   " $@;
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CXXLD = $(am__v_CXXLD_$(V))
am__v_CXXLD_ = $(am__v_CXXLD_$(AM_DEFAULT_VERBOSITY))
am__v_CXXLD_0 = @echo "  CXXLD " $@;
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN   " $@;
DIST_SOURCES = $(newphasefield_wb_SOURCES) $(phasefield_SOURCES) \
	$(phasefield_nc_SOURCES) $(phasefield_wb_SOURCES)
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__installdirs = "$(DESTDIR)$(phasedir)"
HEADERS = $(phase_HEADERS)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
ACLOCAL_AMFLAGS = @ACLOCAL_AMFLAGS@
ALBERTA1D_CPPFLAGS = @ALBERTA1D_CPPFLAGS@
ALBERTA1D_LDFLAGS = @ALBERTA1D_LDFLAGS@
ALBERTA1D_LIBS = @ALBERTA1D_LIBS@
ALBERTA2D_CPPFLAGS = @ALBERTA2D_CPPFLAGS@
ALBERTA2D_LDFLAGS = @ALBERTA2D_LDFLAGS@
ALBERTA2D_LIBS = @ALBERTA2D_LIBS@
ALBERTA3D_CPPFLAGS = @ALBERTA3D_CPPFLAGS@
ALBERTA3D_LDFLAGS = @ALBERTA3D_LDFLAGS@
ALBERTA3D_LIBS = @ALBERTA3D_LIBS@
ALBERTA4D_CPPFLAGS = @ALBERTA4D_CPPFLAGS@
ALBERTA4D_LDFLAGS = @ALBERTA4D_LDFLAGS@
ALBERTA4D_LIBS = @ALBERTA4D_LIBS@
ALBERTA5D_CPPFLAGS = @ALBERTA5D_CPPFLAGS@
ALBERTA5D_LDFLAGS = @ALBERTA5D_LDFLAGS@
ALBERTA5D_LIBS = @ALBERTA5D_LIBS@
ALBERTA6D_CPPFLAGS = @ALBERTA6D_CPPFLAGS@
ALBERTA6D_LDFLAGS = @ALBERTA6D_LDFLAGS@
ALBERTA6D_LIBS = @ALBERTA6D_LIBS@
ALBERTA7D_CPPFLAGS = @ALBERTA7D_CPPFLAGS@
ALBERTA7D_LDFLAGS = @ALBERTA7D_LDFLAGS@
ALBERTA7D_LIBS = @ALBERTA7D_LIBS@
ALBERTA8D_CPPFLAGS = @ALBERTA8D_CPPFLAGS@
ALBERTA8D_LDFLAGS = @ALBERTA8D_LDFLAGS@
ALBERTA8D_LIBS = @ALBERTA8D_LIBS@
ALBERTA9D_CPPFLAGS = @ALBERTA9D_CPPFLAGS@
ALBERTA9D_LDFLAGS = @ALBERTA9D_LDFLAGS@
ALBERTA9D_LIBS = @ALBERTA9D_LIBS@
ALBERTAROOT = @ALBERTAROOT@
ALBERTA_BASE_LIBS = @ALBERTA_BASE_LIBS@
ALBERTA_CPPFLAGS = @ALBERTA_CPPFLAGS@
ALBERTA_DIM = @ALBERTA_DIM@
ALBERTA_DIM_CPPFLAGS = @ALBERTA_DIM_CPPFLAGS@
ALBERTA_INCLUDE_CPPFLAGS = @ALBERTA_INCLUDE_CPPFLAGS@
ALBERTA_LDFLAGS = @ALBERTA_LDFLAGS@
ALBERTA_LIBPATHFLAGS = @ALBERTA_LIBPATHFLAGS@
ALBERTA_LIBS = @ALBERTA_LIBS@
ALGLIB_CPPFLAGS = @ALGLIB_CPPFLAGS@
ALGLIB_LIBS = @ALGLIB_LIBS@
ALL_PKG_CPPFLAGS = @ALL_PKG_CPPFLAGS@
ALL_PKG_LDFLAGS = @ALL_PKG_LDFLAGS@
ALL_PKG_LIBS = @ALL_PKG_LIBS@
ALUGRID_CPPFLAGS = @ALUGRID_CPPFLAGS@
ALUGRID_LDFLAGS = @ALUGRID_LDFLAGS@
ALUGRID_LIBS = @ALUGRID_LIBS@
AMIRAMESH_CPPFLAGS = @AMIRAMESH_CPPFLAGS@
AMIRAMESH_LDFLAGS = @AMIRAMESH_LDFLAGS@
AMIRAMESH_LIBS = @AMIRAMESH_LIBS@
AMTAR = @AMTAR@

# INFO SPACE OPERATOR:
# 		1. define PRIMALDG for various space operators in primal formulation
# 	  2. define DUALDG for the LDG space operator in dual formulation
# INFO TRACK LIFTING:
# 		1. define LOCALDEBUG to calculate \sum_e\int_Omega(r_e*l_e) and 
# 			 \sum_e\int_Omega(r_e*l_e). They will be output to std::cout from the Stepper
# INFO LIMITER
# 		1. define LIMITER to limit the advection part of the solution (not checked)
AM_CPPFLAGS = $(USE_OMP) -I../../problems/phase  $(ALL_PKG_CPPFLAGS) -DGRIDDIM=$(GRIDDIM) \
              -DPROBLEM=$(PROBLEM) -D$(GRIDTYPE) $(DUNEMPICPPFLAGS) -DFEMTIMER \
              -DFLUX=$(FLUX) -DDUALDG # -DWBPROBLEM -DWELLBALANCE

AM_DEFAULT_VERBOSITY = @AM_DEFAULT_VERBOSITY@
AM_LDFLAGS = $(ALL_PKG_LDFLAGS) $(LAPACK_LDFLAGS) $(USE_OMP)              
AR = @AR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
BIBTEX = @BIBTEX@
BLAS_LIBS = @BLAS_LIBS@
BOOST_CPPFLAGS = @BOOST_CPPFLAGS@
BOOST_LDFLAGS = @BOOST_LDFLAGS@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CONVERT = @CONVERT@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DLLTOOL = @DLLTOOL@
DOT = @DOT@
DOXYGEN = @DOXYGEN@
DSYMUTIL = @DSYMUTIL@
DUMPBIN = @DUMPBIN@
DUNEALBERTA_LIBPATHFLAGS = @DUNEALBERTA_LIBPATHFLAGS@
DUNEMPICPPFLAGS = @DUNEMPICPPFLAGS@
DUNEMPILDFLAGS = @DUNEMPILDFLAGS@
DUNEMPILIBS = @DUNEMPILIBS@
DUNEWEBDIR = @DUNEWEBDIR@
DUNE_COMMON_CPPFLAGS = @DUNE_COMMON_CPPFLAGS@
DUNE_COMMON_LDFLAGS = @DUNE_COMMON_LDFLAGS@
DUNE_COMMON_LIBDIR = @DUNE_COMMON_LIBDIR@
DUNE_COMMON_LIBS = @DUNE_COMMON_LIBS@
DUNE_COMMON_ROOT = @DUNE_COMMON_ROOT@
DUNE_COMMON_VERSION = @DUNE_COMMON_VERSION@
DUNE_COMMON_VERSION_MAJOR = @DUNE_COMMON_VERSION_MAJOR@
DUNE_COMMON_VERSION_MINOR = @DUNE_COMMON_VERSION_MINOR@
DUNE_COMMON_VERSION_REVISION = @DUNE_COMMON_VERSION_REVISION@
DUNE_CPPFLAGS = @DUNE_CPPFLAGS@
DUNE_FEM_CPPFLAGS = @DUNE_FEM_CPPFLAGS@
DUNE_FEM_DG_CPPFLAGS = @DUNE_FEM_DG_CPPFLAGS@
DUNE_FEM_DG_LDFLAGS = @DUNE_FEM_DG_LDFLAGS@
DUNE_FEM_DG_LIBS = @DUNE_FEM_DG_LIBS@
DUNE_FEM_DG_ROOT = @DUNE_FEM_DG_ROOT@
DUNE_FEM_DG_VERSION = @DUNE_FEM_DG_VERSION@
DUNE_FEM_DG_VERSION_MAJOR = @DUNE_FEM_DG_VERSION_MAJOR@
DUNE_FEM_DG_VERSION_MINOR = @DUNE_FEM_DG_VERSION_MINOR@
DUNE_FEM_DG_VERSION_REVISION = @DUNE_FEM_DG_VERSION_REVISION@
DUNE_FEM_LDFLAGS = @DUNE_FEM_LDFLAGS@
DUNE_FEM_LIBDIR = @DUNE_FEM_LIBDIR@
DUNE_FEM_LIBS = @DUNE_FEM_LIBS@
DUNE_FEM_ROOT = @DUNE_FEM_ROOT@
DUNE_FEM_VERSION = @DUNE_FEM_VERSION@
DUNE_FEM_VERSION_MAJOR = @DUNE_FEM_VERSION_MAJOR@
DUNE_FEM_VERSION_MINOR = @DUNE_FEM_VERSION_MINOR@
DUNE_FEM_VERSION_REVISION = @DUNE_FEM_VERSION_REVISION@
DUNE_GEOMETRY_CPPFLAGS = @DUNE_GEOMETRY_CPPFLAGS@
DUNE_GEOMETRY_LDFLAGS = @DUNE_GEOMETRY_LDFLAGS@
DUNE_GEOMETRY_LIBDIR = @DUNE_GEOMETRY_LIBDIR@
DUNE_GEOMETRY_LIBS = @DUNE_GEOMETRY_LIBS@
DUNE_GEOMETRY_ROOT = @DUNE_GEOMETRY_ROOT@
DUNE_GEOMETRY_VERSION = @DUNE_GEOMETRY_VERSION@
DUNE_GEOMETRY_VERSION_MAJOR = @DUNE_GEOMETRY_VERSION_MAJOR@
DUNE_GEOMETRY_VERSION_MINOR = @DUNE_GEOMETRY_VERSION_MINOR@
DUNE_GEOMETRY_VERSION_REVISION = @DUNE_GEOMETRY_VERSION_REVISION@
DUNE_GRID_CPPFLAGS = @DUNE_GRID_CPPFLAGS@
DUNE_GRID_LDFLAGS = @DUNE_GRID_LDFLAGS@
DUNE_GRID_LIBDIR = @DUNE_GRID_LIBDIR@
DUNE_GRID_LIBS = @DUNE_GRID_LIBS@
DUNE_GRID_ROOT = @DUNE_GRID_ROOT@
DUNE_GRID_VERSION = @DUNE_GRID_VERSION@
DUNE_GRID_VERSION_MAJOR = @DUNE_GRID_VERSION_MAJOR@
DUNE_GRID_VERSION_MINOR = @DUNE_GRID_VERSION_MINOR@
DUNE_GRID_VERSION_REVISION = @DUNE_GRID_VERSION_REVISION@
DUNE_ISTL_CPPFLAGS = @DUNE_ISTL_CPPFLAGS@
DUNE_ISTL_LDFLAGS = @DUNE_ISTL_LDFLAGS@
DUNE_ISTL_LIBS = @DUNE_ISTL_LIBS@
DUNE_ISTL_ROOT = @DUNE_ISTL_ROOT@
DUNE_ISTL_VERSION = @DUNE_ISTL_VERSION@
DUNE_ISTL_VERSION_MAJOR = @DUNE_ISTL_VERSION_MAJOR@
DUNE_ISTL_VERSION_MINOR = @DUNE_ISTL_VERSION_MINOR@
DUNE_ISTL_VERSION_REVISION = @DUNE_ISTL_VERSION_REVISION@
DUNE_LDFLAGS = @DUNE_LDFLAGS@
DUNE_LIBS = @DUNE_LIBS@
DUNE_LOCALFUNCTIONS_CPPFLAGS = @DUNE_LOCALFUNCTIONS_CPPFLAGS@
DUNE_LOCALFUNCTIONS_LDFLAGS = @DUNE_LOCALFUNCTIONS_LDFLAGS@
DUNE_LOCALFUNCTIONS_LIBS = @DUNE_LOCALFUNCTIONS_LIBS@
DUNE_LOCALFUNCTIONS_ROOT = @DUNE_LOCALFUNCTIONS_ROOT@
DUNE_LOCALFUNCTIONS_VERSION = @DUNE_LOCALFUNCTIONS_VERSION@
DUNE_LOCALFUNCTIONS_VERSION_MAJOR = @DUNE_LOCALFUNCTIONS_VERSION_MAJOR@
DUNE_LOCALFUNCTIONS_VERSION_MINOR = @DUNE_LOCALFUNCTIONS_VERSION_MINOR@
DUNE_LOCALFUNCTIONS_VERSION_REVISION = @DUNE_LOCALFUNCTIONS_VERSION_REVISION@
DUNE_MAINTAINER_NAME = @DUNE_MAINTAINER_NAME@
DUNE_MOD_NAME = @DUNE_MOD_NAME@
DUNE_MOD_VERSION = @DUNE_MOD_VERSION@
DUNE_PHASEFIELD_VERSION = @DUNE_PHASEFIELD_VERSION@
DUNE_PHASEFIELD_VERSION_MAJOR = @DUNE_PHASEFIELD_VERSION_MAJOR@
DUNE_PHASEFIELD_VERSION_MINOR = @DUNE_PHASEFIELD_VERSION_MINOR@
DUNE_PHASEFIELD_VERSION_REVISION = @DUNE_PHASEFIELD_VERSION_REVISION@
DUNE_SPGRID_CPPFLAGS = @DUNE_SPGRID_CPPFLAGS@
DUNE_SPGRID_LDFLAGS = @DUNE_SPGRID_LDFLAGS@
DUNE_SPGRID_LIBS = @DUNE_SPGRID_LIBS@
DUNE_SPGRID_ROOT = @DUNE_SPGRID_ROOT@
DUNE_SPGRID_VERSION = @DUNE_SPGRID_VERSION@
DUNE_SPGRID_VERSION_MAJOR = @DUNE_SPGRID_VERSION_MAJOR@
DUNE_SPGRID_VERSION_MINOR = @DUNE_SPGRID_VERSION_MINOR@
DUNE_SPGRID_VERSION_REVISION = @DUNE_SPGRID_VERSION_REVISION@
DVIPDF = @DVIPDF@
DVIPS = @DVIPS@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
ENABLE_PARALLEL = @ENABLE_PARALLEL@
EXEEXT = @EXEEXT@
F77 = @F77@
FC = @FC@
FCFLAGS = @FCFLAGS@
FCLIBS = @FCLIBS@
FFLAGS = @FFLAGS@
FGREP = @FGREP@
FLIBS = @FLIBS@
GL_CFLAGS = @GL_CFLAGS@
GL_CPPFLAGS = @GL_CPPFLAGS@
GL_LDFLAGS = @GL_LDFLAGS@
GL_LIBS = @GL_LIBS@
GMP_CPPFLAGS = @GMP_CPPFLAGS@
GMP_LIBS = @GMP_LIBS@
GRAPE_CPPFLAGS = @GRAPE_CPPFLAGS@
GRAPE_LDFLAGS = @GRAPE_LDFLAGS@
GRAPE_LIBS = @GRAPE_LIBS@
GREP = @GREP@
#GRIDTYPE = YASPGRID
GRIDDIM = 1 
GRIDDIM_CPPFLAGS = @GRIDDIM_CPPFLAGS@

#GRIDTYPE = ALUGRID_CONFORM
GRIDTYPE = SPGRID
INKSCAPE = @INKSCAPE@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LAPACK_LIBS = @LAPACK_LIBS@
LD = @LD@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LIPO = @LIPO@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
MANIFEST_TOOL = @MANIFEST_TOOL@
METIS = @METIS@
METIS_INCLUDE = @METIS_INCLUDE@
METIS_LDFLAGS = @METIS_LDFLAGS@
METIS_LIB = @METIS_LIB@
MKDIR_P = @MKDIR_P@
MPICC = @MPICC@
MPILIBS = @MPILIBS@
MPI_VERSION = @MPI_VERSION@
NM = @NM@
NMEDIT = @NMEDIT@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
OTOOL = @OTOOL@
OTOOL64 = @OTOOL64@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PARDG_CPPFLAGS = @PARDG_CPPFLAGS@
PARDG_LDFLAGS = @PARDG_LDFLAGS@
PARDG_LIBS = @PARDG_LIBS@
PARDISO_LIBS = @PARDISO_LIBS@
PARMETIS = @PARMETIS@
PARMETIS_CPPFLAGS = @PARMETIS_CPPFLAGS@
PARMETIS_LDFLAGS = @PARMETIS_LDFLAGS@
PARMETIS_LIBS = @PARMETIS_LIBS@
PATH_SEPARATOR = @PATH_SEPARATOR@
PERL = @PERL@
PKG_CONFIG = @PKG_CONFIG@
PKG_CONFIG_LIBDIR = @PKG_CONFIG_LIBDIR@
PKG_CONFIG_PATH = @PKG_CONFIG_PATH@
PSURFACE_CPPFLAGS = @PSURFACE_CPPFLAGS@
PSURFACE_LDFLAGS = @PSURFACE_LDFLAGS@
PSURFACE_LIBS = @PSURFACE_LIBS@
PTHREAD_CC = @PTHREAD_CC@
PTHREAD_CFLAGS = @PTHREAD_CFLAGS@
PTHREAD_LIBS = @PTHREAD_LIBS@
RANLIB = @RANLIB@
REQUIRES = @REQUIRES@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
SIONLIB_CPPFLAGS = @SIONLIB_CPPFLAGS@
SIONLIB_LDFLAGS = @SIONLIB_LDFLAGS@
SIONLIB_LIBS = @SIONLIB_LIBS@
STRIP = @STRIP@
SUPERLU_CPPFLAGS = @SUPERLU_CPPFLAGS@
SUPERLU_DIST_CPPFLAGS = @SUPERLU_DIST_CPPFLAGS@
SUPERLU_DIST_LDFLAGS = @SUPERLU_DIST_LDFLAGS@
SUPERLU_DIST_LIBS = @SUPERLU_DIST_LIBS@
SUPERLU_LIBS = @SUPERLU_LIBS@
TEX = @TEX@
UG_CPPFLAGS = @UG_CPPFLAGS@
UG_LDFLAGS = @UG_LDFLAGS@
UG_LIBS = @UG_LIBS@
UMFPACK_CPPFLAGS = @UMFPACK_CPPFLAGS@
UMFPACK_LDFLAGS = @UMFPACK_LDFLAGS@
UMFPACK_LIBS = @UMFPACK_LIBS@
VERSION = @VERSION@
WML = @WML@
WORLDDIM = @WORLDDIM@
XMKMF = @XMKMF@
X_CFLAGS = @X_CFLAGS@
X_EXTRA_LIBS = @X_EXTRA_LIBS@
X_LIBS = @X_LIBS@
X_PRE_LIBS = @X_PRE_LIBS@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_AR = @ac_ct_AR@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_DUMPBIN = @ac_ct_DUMPBIN@
ac_ct_F77 = @ac_ct_F77@
ac_ct_FC = @ac_ct_FC@
acx_pthread_config = @acx_pthread_config@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
am_dir = @am_dir@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
resolved_top_srcdir = @resolved_top_srcdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@

# install these headers
phasedir = $(includedir)/src/problems/phase
phase_HEADERS = phase_model.hh problemcreator.hh phasewaves.hh \
phase_model_spec.hh problemtype.hh


#USE_OMP=-fopenmp
LDADD = $(ALL_PKG_LDFLAGS) $(ALL_PKG_LIBS) $(LOCAL_LIBS) $(DUNEMPILDFLAGS) $(DUNEMPILIBS) 
BASEDIR = ../../../dune/fem/main
SOURCES = $(BASEDIR)/phasefield.cc $(BASEDIR)/phasefield_pol.cc
POLORDER = 1
PROBLEM = 1 # check ./problemtype.hh
FLUX = 1 # check ./problemcreator.hh
phasefield_SOURCES = $(SOURCES) 
phasefield_CPPFLAGS = $(AM_CPPFLAGS) -DPOLORDER=$(POLORDER)
phasefield_nc_SOURCES = $(SOURCES) 
phasefield_nc_CPPFLAGS = $(AM_CPPFLAGS) -DPOLORDER=$(POLORDER) -DNONCON
phasefield_wb_SOURCES = $(SOURCES) 
phasefield_wb_CPPFLAGS = $(AM_CPPFLAGS) -DPOLORDER=$(POLORDER) -DWELLBALANCED
newphasefield_wb_SOURCES = $(SOURCES) 
newphasefield_wb_CPPFLAGS = $(AM_CPPFLAGS) -DPOLORDER=$(POLORDER) -DWELLBALANCED -DMYALGO
DISTCHECK_CONFIGURE_FLAGS = DOXYGEN="true"
EXTRA_DIST = paramFiles/param*
CLEANFILES = manager.*.log 
PROG = phase
sourcescheck_IGNORE = aclocal.m4 dependencies.m4
sourcescheck_LIST = $(SOURCES) $(DIST_SOURCES) $(HEADERS) $(DIST_HEADERS) \
	$(sourcescheck_NOSOURCES) $(dist_noinst_DATA) $(EXTRA_DIST)

headercheck_PATTERN = *.hh
LOG_FILE = $(top_srcdir)/check-log.log
LOG_DIR = $(top_srcdir)/check-log
LOG_STORE = $(SHELL) $(DUNE_COMMON_ROOT)/bin/check-log-store $(LOG_FILE) $(LOG_DIR)
LOG_TIMING = 
LOG_SET_OPTIONS = \
	path=`test "$(subdir)" = "." && \
	echo "/@PACKAGE_NAME@" || echo "/@PACKAGE_NAME@/$(subdir)"`; \
	ppath=`dirname $$path`; \
	dir=`basename $$path`

all: all-am

.SUFFIXES:
.SUFFIXES: .cc .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am $(top_srcdir)/am/global-rules $(top_srcdir)/am/sourcescheck $(top_srcdir)/am/headercheck $(top_srcdir)/am/checklog $(top_srcdir)/am/documentation $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign src/problems/1dphase/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign src/problems/1dphase/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

clean-checkPROGRAMS:
	@list='$(check_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list
newphasefield_wb$(EXEEXT): $(newphasefield_wb_OBJECTS) $(newphasefield_wb_DEPENDENCIES) 
	@rm -f newphasefield_wb$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(newphasefield_wb_OBJECTS) $(newphasefield_wb_LDADD) $(LIBS)
phasefield$(EXEEXT): $(phasefield_OBJECTS) $(phasefield_DEPENDENCIES) 
	@rm -f phasefield$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(phasefield_OBJECTS) $(phasefield_LDADD) $(LIBS)
phasefield_nc$(EXEEXT): $(phasefield_nc_OBJECTS) $(phasefield_nc_DEPENDENCIES) 
	@rm -f phasefield_nc$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(phasefield_nc_OBJECTS) $(phasefield_nc_LDADD) $(LIBS)
phasefield_wb$(EXEEXT): $(phasefield_wb_OBJECTS) $(phasefield_wb_DEPENDENCIES) 
	@rm -f phasefield_wb$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(phasefield_wb_OBJECTS) $(phasefield_wb_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/newphasefield_wb-phasefield.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/newphasefield_wb-phasefield_pol.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/phasefield-phasefield.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/phasefield-phasefield_pol.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/phasefield_nc-phasefield.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/phasefield_nc-phasefield_pol.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/phasefield_wb-phasefield.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/phasefield_wb-phasefield_pol.Po@am__quote@

.cc.o:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@am__fastdepCXX_FALSE@	$(AM_V_CXX) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ $<

.cc.obj:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@am__fastdepCXX_FALSE@	$(AM_V_CXX) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cc.lo:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
@am__fastdepCXX_FALSE@	$(AM_V_CXX) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LTCXXCOMPILE) -c -o $@ $<

newphasefield_wb-phasefield.o: $(BASEDIR)/phasefield.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(newphasefield_wb_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT newphasefield_wb-phasefield.o -MD -MP -MF $(DEPDIR)/newphasefield_wb-phasefield.Tpo -c -o newphasefield_wb-phasefield.o `test -f '$(BASEDIR)/phasefield.cc' || echo '$(srcdir)/'`$(BASEDIR)/phasefield.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/newphasefield_wb-phasefield.Tpo $(DEPDIR)/newphasefield_wb-phasefield.Po
@am__fastdepCXX_FALSE@	$(AM_V_CXX) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(BASEDIR)/phasefield.cc' object='newphasefield_wb-phasefield.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(newphasefield_wb_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o newphasefield_wb-phasefield.o `test -f '$(BASEDIR)/phasefield.cc' || echo '$(srcdir)/'`$(BASEDIR)/phasefield.cc

newphasefield_wb-phasefield.obj: $(BASEDIR)/phasefield.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(newphasefield_wb_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT newphasefield_wb-phasefield.obj -MD -MP -MF $(DEPDIR)/newphasefield_wb-phasefield.Tpo -c -o newphasefield_wb-phasefield.obj `if test -f '$(BASEDIR)/phasefield.cc'; then $(CYGPATH_W) '$(BASEDIR)/phasefield.cc'; else $(CYGPATH_W) '$(srcdir)/$(BASEDIR)/phasefield.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/newphasefield_wb-phasefield.Tpo $(DEPDIR)/newphasefield_wb-phasefield.Po
@am__fastdepCXX_FALSE@	$(AM_V_CXX) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(BASEDIR)/phasefield.cc' object='newphasefield_wb-phasefield.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(newphasefield_wb_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o newphasefield_wb-phasefield.obj `if test -f '$(BASEDIR)/phasefield.cc'; then $(CYGPATH_W) '$(BASEDIR)/phasefield.cc'; else $(CYGPATH_W) '$(srcdir)/$(BASEDIR)/phasefield.cc'; fi`

newphasefield_wb-phasefield_pol.o: $(BASEDIR)/phasefield_pol.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(newphasefield_wb_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT newphasefield_wb-phasefield_pol.o -MD -MP -MF $(DEPDIR)/newphasefield_wb-phasefield_pol.Tpo -c -o newphasefield_wb-phasefield_pol.o `test -f '$(BASEDIR)/phasefield_pol.cc' || echo '$(srcdir)/'`$(BASEDIR)/phasefield_pol.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/newphasefield_wb-phasefield_pol.Tpo $(DEPDIR)/newphasefield_wb-phasefield_pol.Po
@am__fastdepCXX_FALSE@	$(AM_V_CXX) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(BASEDIR)/phasefield_pol.cc' object='newphasefield_wb-phasefield_pol.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(newphasefield_wb_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o newphasefield_wb-phasefield_pol.o `test -f '$(BASEDIR)/phasefield_pol.cc' || echo '$(srcdir)/'`$(BASEDIR)/phasefield_pol.cc

newphasefield_wb-phasefield_pol.obj: $(BASEDIR)/phasefield_pol.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(newphasefield_wb_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT newphasefield_wb-phasefield_pol.obj -MD -MP -MF $(DEPDIR)/newphasefield_wb-phasefield_pol.Tpo -c -o newphasefield_wb-phasefield_pol.obj `if test -f '$(BASEDIR)/phasefield_pol.cc'; then $(CYGPATH_W) '$(BASEDIR)/phasefield_pol.cc'; else $(CYGPATH_W) '$(srcdir)/$(BASEDIR)/phasefield_pol.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/newphasefield_wb-phasefield_pol.Tpo $(DEPDIR)/newphasefield_wb-phasefield_pol.Po
@am__fastdepCXX_FALSE@	$(AM_V_CXX) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(BASEDIR)/phasefield_pol.cc' object='newphasefield_wb-phasefield_pol.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(newphasefield_wb_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o newphasefield_wb-phasefield_pol.obj `if test -f '$(BASEDIR)/phasefield_pol.cc'; then $(CYGPATH_W) '$(BASEDIR)/phasefield_pol.cc'; else $(CYGPATH_W) '$(srcdir)/$(BASEDIR)/phasefield_pol.cc'; fi`

phasefield-phasefield.o: $(BASEDIR)/phasefield.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(phasefield_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT phasefield-phasefield.o -MD -MP -MF $(DEPDIR)/phasefield-phasefield.Tpo -c -o phasefield-phasefield.o `test -f '$(BASEDIR)/phasefield.cc' || echo '$(srcdir)/'`$(BASEDIR)/phasefield.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/phasefield-phasefield.Tpo $(DEPDIR)/phasefield-phasefield.Po
@am__fastdepCXX_FALSE@	$(AM_V_CXX) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(BASEDIR)/phasefield.cc' object='phasefield-phasefield.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(phasefield_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o phasefield-phasefield.o `test -f '$(BASEDIR)/phasefield.cc' || echo '$(srcdir)/'`$(BASEDIR)/phasefield.cc

phasefield-phasefield.obj: $(BASEDIR)/phasefield.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(phasefield_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT phasefield-phasefield.obj -MD -MP -MF $(DEPDIR)/phasefield-phasefield.Tpo -c -o phasefield-phasefield.obj `if test -f '$(BASEDIR)/phasefield.cc'; then $(CYGPATH_W) '$(BASEDIR)/phasefield.cc'; else $(CYGPATH_W) '$(srcdir)/$(BASEDIR)/phasefield.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/phasefield-phasefield.Tpo $(DEPDIR)/phasefield-phasefield.Po
@am__fastdepCXX_FALSE@	$(AM_V_CXX) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(BASEDIR)/phasefield.cc' object='phasefield-phasefield.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(phasefield_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o phasefield-phasefield.obj `if test -f '$(BASEDIR)/phasefield.cc'; then $(CYGPATH_W) '$(BASEDIR)/phasefield.cc'; else $(CYGPATH_W) '$(srcdir)/$(BASEDIR)/phasefield.cc'; fi`

phasefield-phasefield_pol.o: $(BASEDIR)/phasefield_pol.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(phasefield_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT phasefield-phasefield_pol.o -MD -MP -MF $(DEPDIR)/phasefield-phasefield_pol.Tpo -c -o phasefield-phasefield_pol.o `test -f '$(BASEDIR)/phasefield_pol.cc' || echo '$(srcdir)/'`$(BASEDIR)/phasefield_pol.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/phasefield-phasefield_pol.Tpo $(DEPDIR)/phasefield-phasefield_pol.Po
@am__fastdepCXX_FALSE@	$(AM_V_CXX) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(BASEDIR)/phasefield_pol.cc' object='phasefield-phasefield_pol.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(phasefield_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o phasefield-phasefield_pol.o `test -f '$(BASEDIR)/phasefield_pol.cc' || echo '$(srcdir)/'`$(BASEDIR)/phasefield_pol.cc

phasefield-phasefield_pol.obj: $(BASEDIR)/phasefield_pol.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(phasefield_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT phasefield-phasefield_pol.obj -MD -MP -MF $(DEPDIR)/phasefield-phasefield_pol.Tpo -c -o phasefield-phasefield_pol.obj `if test -f '$(BASEDIR)/phasefield_pol.cc'; then $(CYGPATH_W) '$(BASEDIR)/phasefield_pol.cc'; else $(CYGPATH_W) '$(srcdir)/$(BASEDIR)/phasefield_pol.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/phasefield-phasefield_pol.Tpo $(DEPDIR)/phasefield-phasefield_pol.Po
@am__fastdepCXX_FALSE@	$(AM_V_CXX) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(BASEDIR)/phasefield_pol.cc' object='phasefield-phasefield_pol.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(phasefield_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o phasefield-phasefield_pol.obj `if test -f '$(BASEDIR)/phasefield_pol.cc'; then $(CYGPATH_W) '$(BASEDIR)/phasefield_pol.cc'; else $(CYGPATH_W) '$(srcdir)/$(BASEDIR)/phasefield_pol.cc'; fi`

phasefield_nc-phasefield.o: $(BASEDIR)/phasefield.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(phasefield_nc_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT phasefield_nc-phasefield.o -MD -MP -MF $(DEPDIR)/phasefield_nc-phasefield.Tpo -c -o phasefield_nc-phasefield.o `test -f '$(BASEDIR)/phasefield.cc' || echo '$(srcdir)/'`$(BASEDIR)/phasefield.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/phasefield_nc-phasefield.Tpo $(DEPDIR)/phasefield_nc-phasefield.Po
@am__fastdepCXX_FALSE@	$(AM_V_CXX) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(BASEDIR)/phasefield.cc' object='phasefield_nc-phasefield.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(phasefield_nc_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o phasefield_nc-phasefield.o `test -f '$(BASEDIR)/phasefield.cc' || echo '$(srcdir)/'`$(BASEDIR)/phasefield.cc

phasefield_nc-phasefield.obj: $(BASEDIR)/phasefield.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(phasefield_nc_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT phasefield_nc-phasefield.obj -MD -MP -MF $(DEPDIR)/phasefield_nc-phasefield.Tpo -c -o phasefield_nc-phasefield.obj `if test -f '$(BASEDIR)/phasefield.cc'; then $(CYGPATH_W) '$(BASEDIR)/phasefield.cc'; else $(CYGPATH_W) '$(srcdir)/$(BASEDIR)/phasefield.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/phasefield_nc-phasefield.Tpo $(DEPDIR)/phasefield_nc-phasefield.Po
@am__fastdepCXX_FALSE@	$(AM_V_CXX) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(BASEDIR)/phasefield.cc' object='phasefield_nc-phasefield.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(phasefield_nc_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o phasefield_nc-phasefield.obj `if test -f '$(BASEDIR)/phasefield.cc'; then $(CYGPATH_W) '$(BASEDIR)/phasefield.cc'; else $(CYGPATH_W) '$(srcdir)/$(BASEDIR)/phasefield.cc'; fi`

phasefield_nc-phasefield_pol.o: $(BASEDIR)/phasefield_pol.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(phasefield_nc_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT phasefield_nc-phasefield_pol.o -MD -MP -MF $(DEPDIR)/phasefield_nc-phasefield_pol.Tpo -c -o phasefield_nc-phasefield_pol.o `test -f '$(BASEDIR)/phasefield_pol.cc' || echo '$(srcdir)/'`$(BASEDIR)/phasefield_pol.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/phasefield_nc-phasefield_pol.Tpo $(DEPDIR)/phasefield_nc-phasefield_pol.Po
@am__fastdepCXX_FALSE@	$(AM_V_CXX) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(BASEDIR)/phasefield_pol.cc' object='phasefield_nc-phasefield_pol.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(phasefield_nc_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o phasefield_nc-phasefield_pol.o `test -f '$(BASEDIR)/phasefield_pol.cc' || echo '$(srcdir)/'`$(BASEDIR)/phasefield_pol.cc

phasefield_nc-phasefield_pol.obj: $(BASEDIR)/phasefield_pol.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(phasefield_nc_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT phasefield_nc-phasefield_pol.obj -MD -MP -MF $(DEPDIR)/phasefield_nc-phasefield_pol.Tpo -c -o phasefield_nc-phasefield_pol.obj `if test -f '$(BASEDIR)/phasefield_pol.cc'; then $(CYGPATH_W) '$(BASEDIR)/phasefield_pol.cc'; else $(CYGPATH_W) '$(srcdir)/$(BASEDIR)/phasefield_pol.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/phasefield_nc-phasefield_pol.Tpo $(DEPDIR)/phasefield_nc-phasefield_pol.Po
@am__fastdepCXX_FALSE@	$(AM_V_CXX) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(BASEDIR)/phasefield_pol.cc' object='phasefield_nc-phasefield_pol.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(phasefield_nc_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o phasefield_nc-phasefield_pol.obj `if test -f '$(BASEDIR)/phasefield_pol.cc'; then $(CYGPATH_W) '$(BASEDIR)/phasefield_pol.cc'; else $(CYGPATH_W) '$(srcdir)/$(BASEDIR)/phasefield_pol.cc'; fi`

phasefield_wb-phasefield.o: $(BASEDIR)/phasefield.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(phasefield_wb_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT phasefield_wb-phasefield.o -MD -MP -MF $(DEPDIR)/phasefield_wb-phasefield.Tpo -c -o phasefield_wb-phasefield.o `test -f '$(BASEDIR)/phasefield.cc' || echo '$(srcdir)/'`$(BASEDIR)/phasefield.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/phasefield_wb-phasefield.Tpo $(DEPDIR)/phasefield_wb-phasefield.Po
@am__fastdepCXX_FALSE@	$(AM_V_CXX) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(BASEDIR)/phasefield.cc' object='phasefield_wb-phasefield.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(phasefield_wb_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o phasefield_wb-phasefield.o `test -f '$(BASEDIR)/phasefield.cc' || echo '$(srcdir)/'`$(BASEDIR)/phasefield.cc

phasefield_wb-phasefield.obj: $(BASEDIR)/phasefield.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(phasefield_wb_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT phasefield_wb-phasefield.obj -MD -MP -MF $(DEPDIR)/phasefield_wb-phasefield.Tpo -c -o phasefield_wb-phasefield.obj `if test -f '$(BASEDIR)/phasefield.cc'; then $(CYGPATH_W) '$(BASEDIR)/phasefield.cc'; else $(CYGPATH_W) '$(srcdir)/$(BASEDIR)/phasefield.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/phasefield_wb-phasefield.Tpo $(DEPDIR)/phasefield_wb-phasefield.Po
@am__fastdepCXX_FALSE@	$(AM_V_CXX) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(BASEDIR)/phasefield.cc' object='phasefield_wb-phasefield.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(phasefield_wb_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o phasefield_wb-phasefield.obj `if test -f '$(BASEDIR)/phasefield.cc'; then $(CYGPATH_W) '$(BASEDIR)/phasefield.cc'; else $(CYGPATH_W) '$(srcdir)/$(BASEDIR)/phasefield.cc'; fi`

phasefield_wb-phasefield_pol.o: $(BASEDIR)/phasefield_pol.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(phasefield_wb_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT phasefield_wb-phasefield_pol.o -MD -MP -MF $(DEPDIR)/phasefield_wb-phasefield_pol.Tpo -c -o phasefield_wb-phasefield_pol.o `test -f '$(BASEDIR)/phasefield_pol.cc' || echo '$(srcdir)/'`$(BASEDIR)/phasefield_pol.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/phasefield_wb-phasefield_pol.Tpo $(DEPDIR)/phasefield_wb-phasefield_pol.Po
@am__fastdepCXX_FALSE@	$(AM_V_CXX) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(BASEDIR)/phasefield_pol.cc' object='phasefield_wb-phasefield_pol.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(phasefield_wb_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o phasefield_wb-phasefield_pol.o `test -f '$(BASEDIR)/phasefield_pol.cc' || echo '$(srcdir)/'`$(BASEDIR)/phasefield_pol.cc

phasefield_wb-phasefield_pol.obj: $(BASEDIR)/phasefield_pol.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(phasefield_wb_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT phasefield_wb-phasefield_pol.obj -MD -MP -MF $(DEPDIR)/phasefield_wb-phasefield_pol.Tpo -c -o phasefield_wb-phasefield_pol.obj `if test -f '$(BASEDIR)/phasefield_pol.cc'; then $(CYGPATH_W) '$(BASEDIR)/phasefield_pol.cc'; else $(CYGPATH_W) '$(srcdir)/$(BASEDIR)/phasefield_pol.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/phasefield_wb-phasefield_pol.Tpo $(DEPDIR)/phasefield_wb-phasefield_pol.Po
@am__fastdepCXX_FALSE@	$(AM_V_CXX) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(BASEDIR)/phasefield_pol.cc' object='phasefield_wb-phasefield_pol.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(phasefield_wb_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o phasefield_wb-phasefield_pol.obj `if test -f '$(BASEDIR)/phasefield_pol.cc'; then $(CYGPATH_W) '$(BASEDIR)/phasefield_pol.cc'; else $(CYGPATH_W) '$(srcdir)/$(BASEDIR)/phasefield_pol.cc'; fi`

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
install-phaseHEADERS: $(phase_HEADERS)
	@$(NORMAL_INSTALL)
	test -z "$(phasedir)" || $(MKDIR_P) "$(DESTDIR)$(phasedir)"
	@list='$(phase_HEADERS)'; test -n "$(phasedir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(phasedir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(phasedir)" || exit $$?; \
	done

uninstall-phaseHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(phase_HEADERS)'; test -n "$(phasedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(phasedir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(phasedir)" && rm -f $$files

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_PROGRAMS)
check: check-am
all-am: Makefile $(HEADERS)
installdirs:
	for dir in "$(DESTDIR)$(phasedir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-checkPROGRAMS clean-generic clean-libtool \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am: install-data-local install-phaseHEADERS

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am:

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic \
	maintainer-clean-local

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-local uninstall-phaseHEADERS

.MAKE: check-am install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean \
	clean-checkPROGRAMS clean-generic clean-libtool ctags \
	distclean distclean-compile distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-data \
	install-data-am install-data-local install-dvi install-dvi-am \
	install-exec install-exec-am install-html install-html-am \
	install-info install-info-am install-man install-pdf \
	install-pdf-am install-phaseHEADERS install-ps install-ps-am \
	install-strip installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic \
	maintainer-clean-local mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags uninstall uninstall-am uninstall-local \
	uninstall-phaseHEADERS

# codegeneration 
generatecode:
	$(MAKE) -i clean
	$(MAKE) CXXFLAGS="-O0 -Wall -DNDEBUG -DBASEFUNCTIONSET_CODEGEN_GENERATE" $(PROG)
	./$(PROG) paramFiles/paramNSWaves 

compilecode:
	$(MAKE) clean 
	$(MAKE) CXXFLAGS="$(CXXFLAGS) -DUSE_BASEFUNCTIONSET_CODEGEN" $(PROG)

codegen:
	$(MAKE) generatecode
	$(MAKE) compilecode

sourcescheck: sourcescheck-recursive

#	@(for f in $(sourcescheck_LIST) fnord; do echo $$f; done) | \
#	 grep '\.[hc][hc]$$' | sort | uniq > header_CHECK.install
sourcescheck-am:
	@echo $(sourcescheck_LIST) | tr ' ' '\n' | \
	 grep '\.[hcm][hc4]$$' | sort | uniq > header_CHECK.install
	@(ls $(srcdir); echo $(sourcescheck_DUMMY)) | \
	 grep '\.[hcm][hc4]$$' | sort | uniq > header_CHECK.present
	@RESULT=0; \
	if diff header_CHECK.* | grep ^[\<\>] -q; then \
		echo "==== WARNING ===="; \
	    echo "Directory: $(srcdir)"; \
		echo "Files present but not installed:"; \
		diff -u header_CHECK.install header_CHECK.present | \
		grep -v ^+++ | grep ^+; \
		echo "Files listed for install but not present:"; \
		diff -u header_CHECK.install header_CHECK.present | \
		grep -v ^--- | grep ^-; \
		echo "==== END ===="; \
		RESULT=1; \
	fi; \
	rm -f header_CHECK.install header_CHECK.present; \
	exit $$RESULT

sourcescheck-recursive:
	@set fnord $$MAKEFLAGS; amf=$$2; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	   || case "$$amf" in *=*) exit 1;; *k*) fail=yes;; *) exit 1;; esac; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

.PHONY: sourcescheck sourcescheck-recursive sourcescheck-am

# set 
# headercheck_IGNORE = foo.hh
# to ignore foo.hh

hctest.o: hctest.cc
	$(CXX) -I$(top_builddir) -I$(top_srcdir) -DHEADERCHECK \
	  $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) \
	  $(DUNEMPICPPFLAGS) $(ALL_PKG_CPPFLAGS) -c -o $@ $<

headercheck:
	@if test "x$V" = "x"; then \
      SILENTSTR='V=$(AM_DEFAULT_VERBOSITY)' ; \
    fi; \
    if test "x$SILENT" = "x1"; then \
      SILENTSTR='V=0' ; \
    fi; \
    if test "x$SILENT" = "x0"; then \
      SILENTSTR='V=1' ; \
    fi; \
    if test x"$$HEADER" = "x"; then \
	  $(MAKE) $$SILENTSTR $(AM_MAKEFLAGS) headercheck-recursive; \
	else \
	  $(MAKE) $$SILENTSTR $(AM_MAKEFLAGS) headercheck-am; \
	fi

headercheck-am:
	@if test x"$$HEADER" != "x"; then \
	  list="$$HEADER"; \
	else \
	  pushd "$(srcdir)" > /dev/null; \
	  list=`echo $(headercheck_PATTERN)`; \
	  popd > /dev/null; \
	fi; \
    test -z "$$NO_CONFIG_H" && NO_CONFIG_H=0; \
	test "$$list" != "$(headercheck_PATTERN)" || exit 0; \
	for f in $$list; do \
	echo "$(headercheck_IGNORE)" | tr ' ' '\n' | grep -q "$$f"; \
	  if echo "$(headercheck_IGNORE)" | tr ' ' '\n' | grep -q "$$f"; then continue; fi; \
	  HEADER="$(subdir)/$$f"; \
	  echo "checking $$HEADER"; \
	  CCFILE=hctest.cc; \
	  OFILE=hctest.o; \
	  LOGFILE=hctest.log; \
	  rm -f $$CCFILE; \
	  test $$NO_CONFIG_H -ne 0 && echo "    without config.h" \
	    || echo "#include <config.h>" > $$CCFILE; \
	  echo "#include <$${HEADER}>" >> $$CCFILE; \
	  echo "#include <$${HEADER}>" >> $$CCFILE; \
	  echo "int main () { return 0; }" >> $$CCFILE; \
	  make 	$$OFILE > $$LOGFILE 2>&1; \
	  SUCCESS=$$?; \
	  if ! (test $$SUCCESS -eq 0 && test -e $$OFILE); then \
	    echo "Error in $$HEADER"; \
            test $V -ne 1 && echo "run with V=1 to show details" || cat $$LOGFILE; \
	  fi; \
	  rm -f $$OFILE; \
	  rm -f $$CCFILE; \
	  rm -f $$LOGFILE; \
	  test $$SUCCESS -eq 0 || exit $$SUCCESS; \
	done

headercheck-recursive:
	@set fnord $$MAKEFLAGS; amf=$$2; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  echo "Making $$target in $(subdir)/$$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	   || case "$$amf" in *=*) exit 1;; *k*) fail=yes;; *) exit 1;; esac; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

.PHONY: headercheck headercheck-recursive headercheck-am

# vim:set filetype=automake:

$(DUNE_COMMON_ROOT)/bin/check-log-store: $(DUNE_COMMON_ROOT)/bin/check-log-store.in
	cd $(DUNE_COMMON_ROOT)/bin/ && $(MAKE) check-log-store

check-log: $(DUNE_COMMON_ROOT)/bin/check-log-store
check-log:
	rm -f $(LOG_FILE)

check-log: check-log-libs
check-log: check-log-build
check-log: check-log-test
check-log: check-log-sources
check-log: check-log-headers
check-log: check-log-dir

check-log-libs: check-log-libs-recursive
check-log-build: check-log-build-recursive
check-log-test: check-log-test-recursive
check-log-sources: check-log-sources-recursive
check-log-headers: check-log-headers-recursive
check-log-dir: check-log-dir-recursive

check-log-headers-am:
	$(LOG_SET_OPTIONS); \
	list=`echo $(headercheck_PATTERN)`; \
	test "$$list" != "$(headercheck_PATTERN)" || exit 0; \
	for f in $$list; do \
	  echo "$(headercheck_IGNORE)" | tr ' ' '\n' | grep -q "$$f"; \
	    if echo "$(headercheck_IGNORE)" | tr ' ' '\n' | grep -q "$$f"; then continue; fi; \
	  $(LOG_TIMING) ($(MAKE) headercheck-am SILENT=0 HEADER=$$f; \
	    $(MAKE) headercheck-am SILENT=0 HEADER=$$f NO_CONFIG_H=1) > $(LOG_FILE) 2>&1; \
	  $(LOG_STORE) "headercheck" "$$f" "$$path"; \
	done

check-log-sources-am:
	$(LOG_SET_OPTIONS); \
	$(LOG_TIMING) $(MAKE) sourcescheck-am > $(LOG_FILE) 2>&1; \
	$(LOG_STORE) "sources" "Makefile.am" "$$path"

check-log-libs-am:
	$(LOG_SET_OPTIONS); \
	for lib in $(LTLIBRARIES); do \
	  $(LOG_TIMING) ($(MAKE) $$lib) > $(LOG_FILE) 2>&1; \
	  $(LOG_STORE) "lib" "$$lib" "$$path"; \
	done;

check-log-build-am:
	$(LOG_SET_OPTIONS); \
	for target in $(check_PROGRAMS) $(PROGRAMS); do \
	  $(LOG_TIMING) ($(MAKE) $$target) > $(LOG_FILE) 2>&1; \
	  $(LOG_STORE) "build" "$$target" "$$path"; \
	done;

check-log-test-am:
	@LOG () { \
	  echo "$$1" > $(LOG_FILE).2; \
	  cat $(LOG_FILE) >> $(LOG_FILE).2; \
	  mv $(LOG_FILE).2 $(LOG_FILE); \
	}; \
	$(LOG_SET_OPTIONS); \
	for tst in $(TESTS); do \
	  if test -f ./$$tst; then dir=./; \
	  elif test -f $$tst; then dir=; \
	  else dir="$(srcdir)/"; fi; \
	  echo "TEST $${dir}$$tst"; \
	  if $(LOG_TIMING) $(TESTS_ENVIRONMENT) $${dir}$$tst > $(LOG_FILE) 2>&1; then \
	    case " $(XFAIL_TESTS) " in \
	    *" $$tst "*) \
	      LOG "ERROR: XPASS ($$tst)"; \
		  $(LOG_STORE) "run" "$$tst" "$$path" 1 0; \
	    ;; \
	    *) \
	      LOG "SUCCESS: PASS ($$tst)"; \
		  $(LOG_STORE) "run" "$$tst" "$$path" 0 0; \
	    ;; \
	    esac; \
	  elif test $$? -ne 77; then \
	    case " $(XFAIL_TESTS) " in \
	    *" $$tst "*) \
	      LOG "SUCCESS: XFAIL ($$tst)"; \
		  $(LOG_STORE) "run" "$$tst" "$$path" 0 0; \
	    ;; \
	    *) \
	      LOG "ERROR: FAIL ($$tst)"; \
		  $(LOG_STORE) "run" "$$tst" "$$path" 1 0; \
	    ;; \
	    esac; \
	  else \
	    LOG "WARNING: SKIP ($$tst)"; \
		$(LOG_STORE) "run" "$$tst" "$$path" 0 1; \
	  fi; \
	done;

check-log-dir-am:
	$(LOG_SET_OPTIONS); \
	$(LOG_STORE) "dir" "$$dir" "$$ppath"

check-log-libs-recursive \
check-log-build-recursive \
check-log-test-recursive \
check-log-sources-recursive \
check-log-headers-recursive \
check-log-dir-recursive:
	@set fnord $$MAKEFLAGS; amf=$$2; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	   || case "$$amf" in *=*) exit 1;; *k*) fail=yes;; *) exit 1;; esac; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

.PHONY: check-log \
	check-log-lib check-log-lib-am check-log-lib-recursive \
	check-log-build check-log-build-am check-log-build-recursive \
	check-log-test check-log-test-am check-log-test-recursive \
	check-log-sources check-log-sources-am check-log-sources-recursive \
	check-log-dir check-log-dir-am check-log-dir-recursive

maintainer-clean-local: doc-clean-am

###
# build doc / web-install recursively
doc-clean-am: clean-am doc-clean-documentation doc-clean-local
doc-am: doc-all-documentation doc-local
web-install-am: web-install-local

doc-local:
doc-clean-local:
web-install-local:

web-install: web-install-recursive
doc: doc-recursive
doc-clean: doc-clean-recursive

web-install-recursive \
doc-clean-recursive \
doc-recursive:
	@set fnord $$MAKEFLAGS; amf=$$2; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  echo "Making $$target in $(subdir)/$$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	   || case "$$amf" in *=*) exit 1;; *k*) fail=yes;; *) exit 1;; esac; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

install-data-local: install-documentation
uninstall-local: uninstall-documentation

####
# "implementations"

doc-all-documentation: $(DOCFILES)

doc-clean-documentation:
	-test -z "$(DOCFILES)" || rm -f $(DOCFILES)

install-documentation: $(DOCFILES) install-documentation-local
	@$(NORMAL_INSTALL)
	test -z "$(docdir)" || $(mkdir_p) "$(DESTDIR)$(docdir)"
	@list='$(DOCFILES) $(DOCFILES_EXTRA)'; test -n "$(docdir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(docdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(docdir)" || exit $$?; \
	done

uninstall-documentation: uninstall-documentation-local
	@$(NORMAL_UNINSTALL)
	@list='$(DOCFILES) $(DOCFILES_EXTRA)'; test -n "$(docdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(docdir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(docdir)" && rm -f $$files

.PHONY: uninstall-documentation uninstall-documentation-local \
	install-documentation install-documentation-local \
    doc-clean-am doc-am web-install-am \
    doc-local doc-clean-local web-install-local \
	web-install doc doc-clean \
	web-install-recursive doc-clean-recursive doc-recursive

# add "sourcescheck"-target testing if all source files are mentioned

# check consistency of the headers (see FS#394)

# add "check-log"-target to create automated build logs

# add "doc"-target to create and clean documentation

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
